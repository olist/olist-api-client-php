<?php
/**
 * MODEL053815
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * olist-api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * MODEL053815 Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MODEL053815 implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'MODEL053815';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'about' => 'string',
        'address_city' => 'string',
        'address_complement' => 'string',
        'address_country' => 'string',
        'address_neighbourhood' => 'string',
        'address_number' => 'string',
        'address_postal_code' => 'string',
        'address_reference' => 'string',
        'address_state' => 'string',
        'address_street' => 'string',
        'birthdate' => 'string',
        'blocked' => 'bool',
        'brand' => 'string',
        'certificate_url' => 'string',
        'cnpj' => 'string',
        'company_name' => 'string',
        'cpf' => 'string',
        'crt' => 'string',
        'email' => 'string',
        'features' => 'string',
        'ie' => 'string',
        'invoice_default_serial_number' => 'int',
        'invoice_initial_number' => 'int',
        'is_active' => 'bool',
        'iugu_account_id' => 'string',
        'logo_url' => 'string',
        'mobile_phone' => 'string',
        'name' => 'string',
        'paused' => 'bool',
        'phone' => 'string',
        'picture_url' => 'string',
        'status' => 'string',
        'terms_of_use_version' => 'int',
        'treatment' => 'string',
        'account' => 'object'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'about' => 'about',
        'address_city' => 'address_city',
        'address_complement' => 'address_complement',
        'address_country' => 'address_country',
        'address_neighbourhood' => 'address_neighbourhood',
        'address_number' => 'address_number',
        'address_postal_code' => 'address_postal_code',
        'address_reference' => 'address_reference',
        'address_state' => 'address_state',
        'address_street' => 'address_street',
        'birthdate' => 'birthdate',
        'blocked' => 'blocked',
        'brand' => 'brand',
        'certificate_url' => 'certificate_url',
        'cnpj' => 'cnpj',
        'company_name' => 'company_name',
        'cpf' => 'cpf',
        'crt' => 'crt',
        'email' => 'email',
        'features' => 'features',
        'ie' => 'ie',
        'invoice_default_serial_number' => 'invoice_default_serial_number',
        'invoice_initial_number' => 'invoice_initial_number',
        'is_active' => 'is_active',
        'iugu_account_id' => 'iugu_account_id',
        'logo_url' => 'logo_url',
        'mobile_phone' => 'mobile_phone',
        'name' => 'name',
        'paused' => 'paused',
        'phone' => 'phone',
        'picture_url' => 'picture_url',
        'status' => 'status',
        'terms_of_use_version' => 'terms_of_use_version',
        'treatment' => 'treatment',
        'account' => 'account'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'about' => 'setAbout',
        'address_city' => 'setAddressCity',
        'address_complement' => 'setAddressComplement',
        'address_country' => 'setAddressCountry',
        'address_neighbourhood' => 'setAddressNeighbourhood',
        'address_number' => 'setAddressNumber',
        'address_postal_code' => 'setAddressPostalCode',
        'address_reference' => 'setAddressReference',
        'address_state' => 'setAddressState',
        'address_street' => 'setAddressStreet',
        'birthdate' => 'setBirthdate',
        'blocked' => 'setBlocked',
        'brand' => 'setBrand',
        'certificate_url' => 'setCertificateUrl',
        'cnpj' => 'setCnpj',
        'company_name' => 'setCompanyName',
        'cpf' => 'setCpf',
        'crt' => 'setCrt',
        'email' => 'setEmail',
        'features' => 'setFeatures',
        'ie' => 'setIe',
        'invoice_default_serial_number' => 'setInvoiceDefaultSerialNumber',
        'invoice_initial_number' => 'setInvoiceInitialNumber',
        'is_active' => 'setIsActive',
        'iugu_account_id' => 'setIuguAccountId',
        'logo_url' => 'setLogoUrl',
        'mobile_phone' => 'setMobilePhone',
        'name' => 'setName',
        'paused' => 'setPaused',
        'phone' => 'setPhone',
        'picture_url' => 'setPictureUrl',
        'status' => 'setStatus',
        'terms_of_use_version' => 'setTermsOfUseVersion',
        'treatment' => 'setTreatment',
        'account' => 'setAccount'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'about' => 'getAbout',
        'address_city' => 'getAddressCity',
        'address_complement' => 'getAddressComplement',
        'address_country' => 'getAddressCountry',
        'address_neighbourhood' => 'getAddressNeighbourhood',
        'address_number' => 'getAddressNumber',
        'address_postal_code' => 'getAddressPostalCode',
        'address_reference' => 'getAddressReference',
        'address_state' => 'getAddressState',
        'address_street' => 'getAddressStreet',
        'birthdate' => 'getBirthdate',
        'blocked' => 'getBlocked',
        'brand' => 'getBrand',
        'certificate_url' => 'getCertificateUrl',
        'cnpj' => 'getCnpj',
        'company_name' => 'getCompanyName',
        'cpf' => 'getCpf',
        'crt' => 'getCrt',
        'email' => 'getEmail',
        'features' => 'getFeatures',
        'ie' => 'getIe',
        'invoice_default_serial_number' => 'getInvoiceDefaultSerialNumber',
        'invoice_initial_number' => 'getInvoiceInitialNumber',
        'is_active' => 'getIsActive',
        'iugu_account_id' => 'getIuguAccountId',
        'logo_url' => 'getLogoUrl',
        'mobile_phone' => 'getMobilePhone',
        'name' => 'getName',
        'paused' => 'getPaused',
        'phone' => 'getPhone',
        'picture_url' => 'getPictureUrl',
        'status' => 'getStatus',
        'terms_of_use_version' => 'getTermsOfUseVersion',
        'treatment' => 'getTreatment',
        'account' => 'getAccount'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['about'] = isset($data['about']) ? $data['about'] : null;
        $this->container['address_city'] = isset($data['address_city']) ? $data['address_city'] : null;
        $this->container['address_complement'] = isset($data['address_complement']) ? $data['address_complement'] : null;
        $this->container['address_country'] = isset($data['address_country']) ? $data['address_country'] : null;
        $this->container['address_neighbourhood'] = isset($data['address_neighbourhood']) ? $data['address_neighbourhood'] : null;
        $this->container['address_number'] = isset($data['address_number']) ? $data['address_number'] : null;
        $this->container['address_postal_code'] = isset($data['address_postal_code']) ? $data['address_postal_code'] : null;
        $this->container['address_reference'] = isset($data['address_reference']) ? $data['address_reference'] : null;
        $this->container['address_state'] = isset($data['address_state']) ? $data['address_state'] : null;
        $this->container['address_street'] = isset($data['address_street']) ? $data['address_street'] : null;
        $this->container['birthdate'] = isset($data['birthdate']) ? $data['birthdate'] : null;
        $this->container['blocked'] = isset($data['blocked']) ? $data['blocked'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['certificate_url'] = isset($data['certificate_url']) ? $data['certificate_url'] : null;
        $this->container['cnpj'] = isset($data['cnpj']) ? $data['cnpj'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['cpf'] = isset($data['cpf']) ? $data['cpf'] : null;
        $this->container['crt'] = isset($data['crt']) ? $data['crt'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['features'] = isset($data['features']) ? $data['features'] : null;
        $this->container['ie'] = isset($data['ie']) ? $data['ie'] : null;
        $this->container['invoice_default_serial_number'] = isset($data['invoice_default_serial_number']) ? $data['invoice_default_serial_number'] : null;
        $this->container['invoice_initial_number'] = isset($data['invoice_initial_number']) ? $data['invoice_initial_number'] : null;
        $this->container['is_active'] = isset($data['is_active']) ? $data['is_active'] : null;
        $this->container['iugu_account_id'] = isset($data['iugu_account_id']) ? $data['iugu_account_id'] : null;
        $this->container['logo_url'] = isset($data['logo_url']) ? $data['logo_url'] : null;
        $this->container['mobile_phone'] = isset($data['mobile_phone']) ? $data['mobile_phone'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['paused'] = isset($data['paused']) ? $data['paused'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['picture_url'] = isset($data['picture_url']) ? $data['picture_url'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['terms_of_use_version'] = isset($data['terms_of_use_version']) ? $data['terms_of_use_version'] : null;
        $this->container['treatment'] = isset($data['treatment']) ? $data['treatment'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets about
     * @return string
     */
    public function getAbout()
    {
        return $this->container['about'];
    }

    /**
     * Sets about
     * @param string $about 
     * @return $this
     */
    public function setAbout($about)
    {
        $this->container['about'] = $about;

        return $this;
    }

    /**
     * Gets address_city
     * @return string
     */
    public function getAddressCity()
    {
        return $this->container['address_city'];
    }

    /**
     * Sets address_city
     * @param string $address_city 
     * @return $this
     */
    public function setAddressCity($address_city)
    {
        $this->container['address_city'] = $address_city;

        return $this;
    }

    /**
     * Gets address_complement
     * @return string
     */
    public function getAddressComplement()
    {
        return $this->container['address_complement'];
    }

    /**
     * Sets address_complement
     * @param string $address_complement 
     * @return $this
     */
    public function setAddressComplement($address_complement)
    {
        $this->container['address_complement'] = $address_complement;

        return $this;
    }

    /**
     * Gets address_country
     * @return string
     */
    public function getAddressCountry()
    {
        return $this->container['address_country'];
    }

    /**
     * Sets address_country
     * @param string $address_country 
     * @return $this
     */
    public function setAddressCountry($address_country)
    {
        $this->container['address_country'] = $address_country;

        return $this;
    }

    /**
     * Gets address_neighbourhood
     * @return string
     */
    public function getAddressNeighbourhood()
    {
        return $this->container['address_neighbourhood'];
    }

    /**
     * Sets address_neighbourhood
     * @param string $address_neighbourhood 
     * @return $this
     */
    public function setAddressNeighbourhood($address_neighbourhood)
    {
        $this->container['address_neighbourhood'] = $address_neighbourhood;

        return $this;
    }

    /**
     * Gets address_number
     * @return string
     */
    public function getAddressNumber()
    {
        return $this->container['address_number'];
    }

    /**
     * Sets address_number
     * @param string $address_number 
     * @return $this
     */
    public function setAddressNumber($address_number)
    {
        $this->container['address_number'] = $address_number;

        return $this;
    }

    /**
     * Gets address_postal_code
     * @return string
     */
    public function getAddressPostalCode()
    {
        return $this->container['address_postal_code'];
    }

    /**
     * Sets address_postal_code
     * @param string $address_postal_code 
     * @return $this
     */
    public function setAddressPostalCode($address_postal_code)
    {
        $this->container['address_postal_code'] = $address_postal_code;

        return $this;
    }

    /**
     * Gets address_reference
     * @return string
     */
    public function getAddressReference()
    {
        return $this->container['address_reference'];
    }

    /**
     * Sets address_reference
     * @param string $address_reference 
     * @return $this
     */
    public function setAddressReference($address_reference)
    {
        $this->container['address_reference'] = $address_reference;

        return $this;
    }

    /**
     * Gets address_state
     * @return string
     */
    public function getAddressState()
    {
        return $this->container['address_state'];
    }

    /**
     * Sets address_state
     * @param string $address_state 
     * @return $this
     */
    public function setAddressState($address_state)
    {
        $this->container['address_state'] = $address_state;

        return $this;
    }

    /**
     * Gets address_street
     * @return string
     */
    public function getAddressStreet()
    {
        return $this->container['address_street'];
    }

    /**
     * Sets address_street
     * @param string $address_street 
     * @return $this
     */
    public function setAddressStreet($address_street)
    {
        $this->container['address_street'] = $address_street;

        return $this;
    }

    /**
     * Gets birthdate
     * @return string
     */
    public function getBirthdate()
    {
        return $this->container['birthdate'];
    }

    /**
     * Sets birthdate
     * @param string $birthdate 
     * @return $this
     */
    public function setBirthdate($birthdate)
    {
        $this->container['birthdate'] = $birthdate;

        return $this;
    }

    /**
     * Gets blocked
     * @return bool
     */
    public function getBlocked()
    {
        return $this->container['blocked'];
    }

    /**
     * Sets blocked
     * @param bool $blocked 
     * @return $this
     */
    public function setBlocked($blocked)
    {
        $this->container['blocked'] = $blocked;

        return $this;
    }

    /**
     * Gets brand
     * @return string
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     * @param string $brand 
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets certificate_url
     * @return string
     */
    public function getCertificateUrl()
    {
        return $this->container['certificate_url'];
    }

    /**
     * Sets certificate_url
     * @param string $certificate_url 
     * @return $this
     */
    public function setCertificateUrl($certificate_url)
    {
        $this->container['certificate_url'] = $certificate_url;

        return $this;
    }

    /**
     * Gets cnpj
     * @return string
     */
    public function getCnpj()
    {
        return $this->container['cnpj'];
    }

    /**
     * Sets cnpj
     * @param string $cnpj 
     * @return $this
     */
    public function setCnpj($cnpj)
    {
        $this->container['cnpj'] = $cnpj;

        return $this;
    }

    /**
     * Gets company_name
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     * @param string $company_name 
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets cpf
     * @return string
     */
    public function getCpf()
    {
        return $this->container['cpf'];
    }

    /**
     * Sets cpf
     * @param string $cpf 
     * @return $this
     */
    public function setCpf($cpf)
    {
        $this->container['cpf'] = $cpf;

        return $this;
    }

    /**
     * Gets crt
     * @return string
     */
    public function getCrt()
    {
        return $this->container['crt'];
    }

    /**
     * Sets crt
     * @param string $crt 
     * @return $this
     */
    public function setCrt($crt)
    {
        $this->container['crt'] = $crt;

        return $this;
    }

    /**
     * Gets email
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     * @param string $email 
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets features
     * @return string
     */
    public function getFeatures()
    {
        return $this->container['features'];
    }

    /**
     * Sets features
     * @param string $features 
     * @return $this
     */
    public function setFeatures($features)
    {
        $this->container['features'] = $features;

        return $this;
    }

    /**
     * Gets ie
     * @return string
     */
    public function getIe()
    {
        return $this->container['ie'];
    }

    /**
     * Sets ie
     * @param string $ie 
     * @return $this
     */
    public function setIe($ie)
    {
        $this->container['ie'] = $ie;

        return $this;
    }

    /**
     * Gets invoice_default_serial_number
     * @return int
     */
    public function getInvoiceDefaultSerialNumber()
    {
        return $this->container['invoice_default_serial_number'];
    }

    /**
     * Sets invoice_default_serial_number
     * @param int $invoice_default_serial_number 
     * @return $this
     */
    public function setInvoiceDefaultSerialNumber($invoice_default_serial_number)
    {
        $this->container['invoice_default_serial_number'] = $invoice_default_serial_number;

        return $this;
    }

    /**
     * Gets invoice_initial_number
     * @return int
     */
    public function getInvoiceInitialNumber()
    {
        return $this->container['invoice_initial_number'];
    }

    /**
     * Sets invoice_initial_number
     * @param int $invoice_initial_number 
     * @return $this
     */
    public function setInvoiceInitialNumber($invoice_initial_number)
    {
        $this->container['invoice_initial_number'] = $invoice_initial_number;

        return $this;
    }

    /**
     * Gets is_active
     * @return bool
     */
    public function getIsActive()
    {
        return $this->container['is_active'];
    }

    /**
     * Sets is_active
     * @param bool $is_active 
     * @return $this
     */
    public function setIsActive($is_active)
    {
        $this->container['is_active'] = $is_active;

        return $this;
    }

    /**
     * Gets iugu_account_id
     * @return string
     */
    public function getIuguAccountId()
    {
        return $this->container['iugu_account_id'];
    }

    /**
     * Sets iugu_account_id
     * @param string $iugu_account_id 
     * @return $this
     */
    public function setIuguAccountId($iugu_account_id)
    {
        $this->container['iugu_account_id'] = $iugu_account_id;

        return $this;
    }

    /**
     * Gets logo_url
     * @return string
     */
    public function getLogoUrl()
    {
        return $this->container['logo_url'];
    }

    /**
     * Sets logo_url
     * @param string $logo_url 
     * @return $this
     */
    public function setLogoUrl($logo_url)
    {
        $this->container['logo_url'] = $logo_url;

        return $this;
    }

    /**
     * Gets mobile_phone
     * @return string
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     * @param string $mobile_phone 
     * @return $this
     */
    public function setMobilePhone($mobile_phone)
    {
        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name 
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets paused
     * @return bool
     */
    public function getPaused()
    {
        return $this->container['paused'];
    }

    /**
     * Sets paused
     * @param bool $paused 
     * @return $this
     */
    public function setPaused($paused)
    {
        $this->container['paused'] = $paused;

        return $this;
    }

    /**
     * Gets phone
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     * @param string $phone 
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets picture_url
     * @return string
     */
    public function getPictureUrl()
    {
        return $this->container['picture_url'];
    }

    /**
     * Sets picture_url
     * @param string $picture_url 
     * @return $this
     */
    public function setPictureUrl($picture_url)
    {
        $this->container['picture_url'] = $picture_url;

        return $this;
    }

    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets terms_of_use_version
     * @return int
     */
    public function getTermsOfUseVersion()
    {
        return $this->container['terms_of_use_version'];
    }

    /**
     * Sets terms_of_use_version
     * @param int $terms_of_use_version 
     * @return $this
     */
    public function setTermsOfUseVersion($terms_of_use_version)
    {
        $this->container['terms_of_use_version'] = $terms_of_use_version;

        return $this;
    }

    /**
     * Gets treatment
     * @return string
     */
    public function getTreatment()
    {
        return $this->container['treatment'];
    }

    /**
     * Sets treatment
     * @param string $treatment 
     * @return $this
     */
    public function setTreatment($treatment)
    {
        $this->container['treatment'] = $treatment;

        return $this;
    }

    /**
     * Gets account
     * @return object
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     * @param object $account 
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


