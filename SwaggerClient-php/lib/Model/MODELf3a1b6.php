<?php
/**
 * MODELf3a1b6
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * olist-api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * MODELf3a1b6 Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MODELf3a1b6 implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'MODELf3a1b6';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'availability_days' => 'int',
        'cancelation_reason' => 'string',
        'channel_slug' => 'string',
        'channel_store' => 'string',
        'customer' => 'object',
        'delivered_customer_date' => 'string',
        'estimated_delivery_date' => 'string',
        'invoice_danfe_url' => 'string',
        'invoice_error_message' => 'string',
        'invoice_id' => 'string',
        'invoice_issue_date' => 'string',
        'invoice_key' => 'string',
        'invoice_number' => 'int',
        'invoice_serial_number' => 'int',
        'invoice_source' => 'string',
        'invoice_status' => 'string',
        'invoice_url' => 'string',
        'order_id' => 'string',
        'purchase_timestamp' => 'string',
        'seller_brand' => 'string',
        'seller_email' => 'string',
        'seller_id' => 'string',
        'seller_name' => 'string',
        'seller_order_history' => 'string[]',
        'shipment' => 'object',
        'shipping_limit_date' => 'string',
        'status' => 'string',
        'suspension_reason' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'availability_days' => 'availability_days',
        'cancelation_reason' => 'cancelation_reason',
        'channel_slug' => 'channel_slug',
        'channel_store' => 'channel_store',
        'customer' => 'customer',
        'delivered_customer_date' => 'delivered_customer_date',
        'estimated_delivery_date' => 'estimated_delivery_date',
        'invoice_danfe_url' => 'invoice_danfe_url',
        'invoice_error_message' => 'invoice_error_message',
        'invoice_id' => 'invoice_id',
        'invoice_issue_date' => 'invoice_issue_date',
        'invoice_key' => 'invoice_key',
        'invoice_number' => 'invoice_number',
        'invoice_serial_number' => 'invoice_serial_number',
        'invoice_source' => 'invoice_source',
        'invoice_status' => 'invoice_status',
        'invoice_url' => 'invoice_url',
        'order_id' => 'order_id',
        'purchase_timestamp' => 'purchase_timestamp',
        'seller_brand' => 'seller_brand',
        'seller_email' => 'seller_email',
        'seller_id' => 'seller_id',
        'seller_name' => 'seller_name',
        'seller_order_history' => 'seller_order_history',
        'shipment' => 'shipment',
        'shipping_limit_date' => 'shipping_limit_date',
        'status' => 'status',
        'suspension_reason' => 'suspension_reason'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'availability_days' => 'setAvailabilityDays',
        'cancelation_reason' => 'setCancelationReason',
        'channel_slug' => 'setChannelSlug',
        'channel_store' => 'setChannelStore',
        'customer' => 'setCustomer',
        'delivered_customer_date' => 'setDeliveredCustomerDate',
        'estimated_delivery_date' => 'setEstimatedDeliveryDate',
        'invoice_danfe_url' => 'setInvoiceDanfeUrl',
        'invoice_error_message' => 'setInvoiceErrorMessage',
        'invoice_id' => 'setInvoiceId',
        'invoice_issue_date' => 'setInvoiceIssueDate',
        'invoice_key' => 'setInvoiceKey',
        'invoice_number' => 'setInvoiceNumber',
        'invoice_serial_number' => 'setInvoiceSerialNumber',
        'invoice_source' => 'setInvoiceSource',
        'invoice_status' => 'setInvoiceStatus',
        'invoice_url' => 'setInvoiceUrl',
        'order_id' => 'setOrderId',
        'purchase_timestamp' => 'setPurchaseTimestamp',
        'seller_brand' => 'setSellerBrand',
        'seller_email' => 'setSellerEmail',
        'seller_id' => 'setSellerId',
        'seller_name' => 'setSellerName',
        'seller_order_history' => 'setSellerOrderHistory',
        'shipment' => 'setShipment',
        'shipping_limit_date' => 'setShippingLimitDate',
        'status' => 'setStatus',
        'suspension_reason' => 'setSuspensionReason'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'availability_days' => 'getAvailabilityDays',
        'cancelation_reason' => 'getCancelationReason',
        'channel_slug' => 'getChannelSlug',
        'channel_store' => 'getChannelStore',
        'customer' => 'getCustomer',
        'delivered_customer_date' => 'getDeliveredCustomerDate',
        'estimated_delivery_date' => 'getEstimatedDeliveryDate',
        'invoice_danfe_url' => 'getInvoiceDanfeUrl',
        'invoice_error_message' => 'getInvoiceErrorMessage',
        'invoice_id' => 'getInvoiceId',
        'invoice_issue_date' => 'getInvoiceIssueDate',
        'invoice_key' => 'getInvoiceKey',
        'invoice_number' => 'getInvoiceNumber',
        'invoice_serial_number' => 'getInvoiceSerialNumber',
        'invoice_source' => 'getInvoiceSource',
        'invoice_status' => 'getInvoiceStatus',
        'invoice_url' => 'getInvoiceUrl',
        'order_id' => 'getOrderId',
        'purchase_timestamp' => 'getPurchaseTimestamp',
        'seller_brand' => 'getSellerBrand',
        'seller_email' => 'getSellerEmail',
        'seller_id' => 'getSellerId',
        'seller_name' => 'getSellerName',
        'seller_order_history' => 'getSellerOrderHistory',
        'shipment' => 'getShipment',
        'shipping_limit_date' => 'getShippingLimitDate',
        'status' => 'getStatus',
        'suspension_reason' => 'getSuspensionReason'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['availability_days'] = isset($data['availability_days']) ? $data['availability_days'] : null;
        $this->container['cancelation_reason'] = isset($data['cancelation_reason']) ? $data['cancelation_reason'] : null;
        $this->container['channel_slug'] = isset($data['channel_slug']) ? $data['channel_slug'] : null;
        $this->container['channel_store'] = isset($data['channel_store']) ? $data['channel_store'] : null;
        $this->container['customer'] = isset($data['customer']) ? $data['customer'] : null;
        $this->container['delivered_customer_date'] = isset($data['delivered_customer_date']) ? $data['delivered_customer_date'] : null;
        $this->container['estimated_delivery_date'] = isset($data['estimated_delivery_date']) ? $data['estimated_delivery_date'] : null;
        $this->container['invoice_danfe_url'] = isset($data['invoice_danfe_url']) ? $data['invoice_danfe_url'] : null;
        $this->container['invoice_error_message'] = isset($data['invoice_error_message']) ? $data['invoice_error_message'] : null;
        $this->container['invoice_id'] = isset($data['invoice_id']) ? $data['invoice_id'] : null;
        $this->container['invoice_issue_date'] = isset($data['invoice_issue_date']) ? $data['invoice_issue_date'] : null;
        $this->container['invoice_key'] = isset($data['invoice_key']) ? $data['invoice_key'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['invoice_serial_number'] = isset($data['invoice_serial_number']) ? $data['invoice_serial_number'] : null;
        $this->container['invoice_source'] = isset($data['invoice_source']) ? $data['invoice_source'] : null;
        $this->container['invoice_status'] = isset($data['invoice_status']) ? $data['invoice_status'] : null;
        $this->container['invoice_url'] = isset($data['invoice_url']) ? $data['invoice_url'] : null;
        $this->container['order_id'] = isset($data['order_id']) ? $data['order_id'] : null;
        $this->container['purchase_timestamp'] = isset($data['purchase_timestamp']) ? $data['purchase_timestamp'] : null;
        $this->container['seller_brand'] = isset($data['seller_brand']) ? $data['seller_brand'] : null;
        $this->container['seller_email'] = isset($data['seller_email']) ? $data['seller_email'] : null;
        $this->container['seller_id'] = isset($data['seller_id']) ? $data['seller_id'] : null;
        $this->container['seller_name'] = isset($data['seller_name']) ? $data['seller_name'] : null;
        $this->container['seller_order_history'] = isset($data['seller_order_history']) ? $data['seller_order_history'] : null;
        $this->container['shipment'] = isset($data['shipment']) ? $data['shipment'] : null;
        $this->container['shipping_limit_date'] = isset($data['shipping_limit_date']) ? $data['shipping_limit_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['suspension_reason'] = isset($data['suspension_reason']) ? $data['suspension_reason'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets availability_days
     * @return int
     */
    public function getAvailabilityDays()
    {
        return $this->container['availability_days'];
    }

    /**
     * Sets availability_days
     * @param int $availability_days Max availability days from all items
     * @return $this
     */
    public function setAvailabilityDays($availability_days)
    {
        $this->container['availability_days'] = $availability_days;

        return $this;
    }

    /**
     * Gets cancelation_reason
     * @return string
     */
    public function getCancelationReason()
    {
        return $this->container['cancelation_reason'];
    }

    /**
     * Sets cancelation_reason
     * @param string $cancelation_reason 
     * @return $this
     */
    public function setCancelationReason($cancelation_reason)
    {
        $this->container['cancelation_reason'] = $cancelation_reason;

        return $this;
    }

    /**
     * Gets channel_slug
     * @return string
     */
    public function getChannelSlug()
    {
        return $this->container['channel_slug'];
    }

    /**
     * Sets channel_slug
     * @param string $channel_slug Channel slug
     * @return $this
     */
    public function setChannelSlug($channel_slug)
    {
        $this->container['channel_slug'] = $channel_slug;

        return $this;
    }

    /**
     * Gets channel_store
     * @return string
     */
    public function getChannelStore()
    {
        return $this->container['channel_store'];
    }

    /**
     * Sets channel_store
     * @param string $channel_store Channels Store
     * @return $this
     */
    public function setChannelStore($channel_store)
    {
        $this->container['channel_store'] = $channel_store;

        return $this;
    }

    /**
     * Gets customer
     * @return object
     */
    public function getCustomer()
    {
        return $this->container['customer'];
    }

    /**
     * Sets customer
     * @param object $customer Order Customer
     * @return $this
     */
    public function setCustomer($customer)
    {
        $this->container['customer'] = $customer;

        return $this;
    }

    /**
     * Gets delivered_customer_date
     * @return string
     */
    public function getDeliveredCustomerDate()
    {
        return $this->container['delivered_customer_date'];
    }

    /**
     * Sets delivered_customer_date
     * @param string $delivered_customer_date 
     * @return $this
     */
    public function setDeliveredCustomerDate($delivered_customer_date)
    {
        $this->container['delivered_customer_date'] = $delivered_customer_date;

        return $this;
    }

    /**
     * Gets estimated_delivery_date
     * @return string
     */
    public function getEstimatedDeliveryDate()
    {
        return $this->container['estimated_delivery_date'];
    }

    /**
     * Sets estimated_delivery_date
     * @param string $estimated_delivery_date 
     * @return $this
     */
    public function setEstimatedDeliveryDate($estimated_delivery_date)
    {
        $this->container['estimated_delivery_date'] = $estimated_delivery_date;

        return $this;
    }

    /**
     * Gets invoice_danfe_url
     * @return string
     */
    public function getInvoiceDanfeUrl()
    {
        return $this->container['invoice_danfe_url'];
    }

    /**
     * Sets invoice_danfe_url
     * @param string $invoice_danfe_url URL where is located the PDF invoice File
     * @return $this
     */
    public function setInvoiceDanfeUrl($invoice_danfe_url)
    {
        $this->container['invoice_danfe_url'] = $invoice_danfe_url;

        return $this;
    }

    /**
     * Gets invoice_error_message
     * @return string
     */
    public function getInvoiceErrorMessage()
    {
        return $this->container['invoice_error_message'];
    }

    /**
     * Sets invoice_error_message
     * @param string $invoice_error_message Invoice Error Message
     * @return $this
     */
    public function setInvoiceErrorMessage($invoice_error_message)
    {
        $this->container['invoice_error_message'] = $invoice_error_message;

        return $this;
    }

    /**
     * Gets invoice_id
     * @return string
     */
    public function getInvoiceId()
    {
        return $this->container['invoice_id'];
    }

    /**
     * Sets invoice_id
     * @param string $invoice_id Invoice code
     * @return $this
     */
    public function setInvoiceId($invoice_id)
    {
        $this->container['invoice_id'] = $invoice_id;

        return $this;
    }

    /**
     * Gets invoice_issue_date
     * @return string
     */
    public function getInvoiceIssueDate()
    {
        return $this->container['invoice_issue_date'];
    }

    /**
     * Sets invoice_issue_date
     * @param string $invoice_issue_date Invoice issue date
     * @return $this
     */
    public function setInvoiceIssueDate($invoice_issue_date)
    {
        $this->container['invoice_issue_date'] = $invoice_issue_date;

        return $this;
    }

    /**
     * Gets invoice_key
     * @return string
     */
    public function getInvoiceKey()
    {
        return $this->container['invoice_key'];
    }

    /**
     * Sets invoice_key
     * @param string $invoice_key Invoice Key
     * @return $this
     */
    public function setInvoiceKey($invoice_key)
    {
        $this->container['invoice_key'] = $invoice_key;

        return $this;
    }

    /**
     * Gets invoice_number
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     * @param int $invoice_number Invoice Number
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets invoice_serial_number
     * @return int
     */
    public function getInvoiceSerialNumber()
    {
        return $this->container['invoice_serial_number'];
    }

    /**
     * Sets invoice_serial_number
     * @param int $invoice_serial_number Invoice Serial Number
     * @return $this
     */
    public function setInvoiceSerialNumber($invoice_serial_number)
    {
        $this->container['invoice_serial_number'] = $invoice_serial_number;

        return $this;
    }

    /**
     * Gets invoice_source
     * @return string
     */
    public function getInvoiceSource()
    {
        return $this->container['invoice_source'];
    }

    /**
     * Sets invoice_source
     * @param string $invoice_source Invoice origin name
     * @return $this
     */
    public function setInvoiceSource($invoice_source)
    {
        $this->container['invoice_source'] = $invoice_source;

        return $this;
    }

    /**
     * Gets invoice_status
     * @return string
     */
    public function getInvoiceStatus()
    {
        return $this->container['invoice_status'];
    }

    /**
     * Sets invoice_status
     * @param string $invoice_status 
     * @return $this
     */
    public function setInvoiceStatus($invoice_status)
    {
        $this->container['invoice_status'] = $invoice_status;

        return $this;
    }

    /**
     * Gets invoice_url
     * @return string
     */
    public function getInvoiceUrl()
    {
        return $this->container['invoice_url'];
    }

    /**
     * Sets invoice_url
     * @param string $invoice_url URL where is located the XML invoice File
     * @return $this
     */
    public function setInvoiceUrl($invoice_url)
    {
        $this->container['invoice_url'] = $invoice_url;

        return $this;
    }

    /**
     * Gets order_id
     * @return string
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     * @param string $order_id Order code
     * @return $this
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets purchase_timestamp
     * @return string
     */
    public function getPurchaseTimestamp()
    {
        return $this->container['purchase_timestamp'];
    }

    /**
     * Sets purchase_timestamp
     * @param string $purchase_timestamp Order Purchase Date and time
     * @return $this
     */
    public function setPurchaseTimestamp($purchase_timestamp)
    {
        $this->container['purchase_timestamp'] = $purchase_timestamp;

        return $this;
    }

    /**
     * Gets seller_brand
     * @return string
     */
    public function getSellerBrand()
    {
        return $this->container['seller_brand'];
    }

    /**
     * Sets seller_brand
     * @param string $seller_brand 
     * @return $this
     */
    public function setSellerBrand($seller_brand)
    {
        $this->container['seller_brand'] = $seller_brand;

        return $this;
    }

    /**
     * Gets seller_email
     * @return string
     */
    public function getSellerEmail()
    {
        return $this->container['seller_email'];
    }

    /**
     * Sets seller_email
     * @param string $seller_email 
     * @return $this
     */
    public function setSellerEmail($seller_email)
    {
        $this->container['seller_email'] = $seller_email;

        return $this;
    }

    /**
     * Gets seller_id
     * @return string
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     * @param string $seller_id Seller code
     * @return $this
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets seller_name
     * @return string
     */
    public function getSellerName()
    {
        return $this->container['seller_name'];
    }

    /**
     * Sets seller_name
     * @param string $seller_name Seller name
     * @return $this
     */
    public function setSellerName($seller_name)
    {
        $this->container['seller_name'] = $seller_name;

        return $this;
    }

    /**
     * Gets seller_order_history
     * @return string[]
     */
    public function getSellerOrderHistory()
    {
        return $this->container['seller_order_history'];
    }

    /**
     * Sets seller_order_history
     * @param string[] $seller_order_history 
     * @return $this
     */
    public function setSellerOrderHistory($seller_order_history)
    {
        $this->container['seller_order_history'] = $seller_order_history;

        return $this;
    }

    /**
     * Gets shipment
     * @return object
     */
    public function getShipment()
    {
        return $this->container['shipment'];
    }

    /**
     * Sets shipment
     * @param object $shipment Order shipment
     * @return $this
     */
    public function setShipment($shipment)
    {
        $this->container['shipment'] = $shipment;

        return $this;
    }

    /**
     * Gets shipping_limit_date
     * @return string
     */
    public function getShippingLimitDate()
    {
        return $this->container['shipping_limit_date'];
    }

    /**
     * Sets shipping_limit_date
     * @param string $shipping_limit_date Limit date to send the Order
     * @return $this
     */
    public function setShippingLimitDate($shipping_limit_date)
    {
        $this->container['shipping_limit_date'] = $shipping_limit_date;

        return $this;
    }

    /**
     * Gets status
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param string $status 
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets suspension_reason
     * @return string
     */
    public function getSuspensionReason()
    {
        return $this->container['suspension_reason'];
    }

    /**
     * Sets suspension_reason
     * @param string $suspension_reason 
     * @return $this
     */
    public function setSuspensionReason($suspension_reason)
    {
        $this->container['suspension_reason'] = $suspension_reason;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


